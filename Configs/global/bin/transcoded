#!/usr/bin/env bash
# Trans coded? Many such cases,,,
#
# This script uses handbrake to transcode the given Blu-ray into a format
# that is better for media streaming on Jellyfin.
#
# It specifically uses fewer threads to avoid hurting the responsiveness of
# the machine, but this does significantly reduce the performance, meaning it
# will take far longer than it ordinarily would.

set -e

usage() {
    echoerr "Usage: transcoded [encode-type] [input file] [output directory]"
    echoerr "  Where encode-type is one of:"
    echoerr "    dvd : 576p DVD"
    echoerr "    blu-ray : 1080p Blu-Ray"
    echoerr "    uhd : 4K Blu-Ray (not implemented yet)"
    exit 1
}


main() {
    ENCODE_TYPE="$1"
    IN_FILE="$2"
    OUT_DIR="$3"

    case $ENCODE_TYPE in
        dvd)
            PRESET_FILE="$DOTFILES/Other/handbrake/dvd-to-576p.json"
            PRESET_NAME="Jellyfin 576p Stereo"
            OUT_FILE="576p.mp4"
            ;;

        blu-ray)
            PRESET_FILE="$DOTFILES/Other/handbrake/blu-ray-to-1080p.json"
            PRESET_NAME="Jellyfin 1080p Surround"
            OUT_FILE="1080p.mp4"
            ;;

        *)
            usage
            ;;
    esac

    TEMP_FILE=$(mktemp)

    echoerr "In:   $IN_FILE"
    echoerr "Temp: $TEMP_FILE"
    echoerr "Out:  $OUT_DIR/$OUT_FILE"
    echoerr "==========================="

    # Create output directory
    mkdir -p "$OUT_DIR"

    HandBrakeCLI \
        -x threads=2 \
        --input "$IN_FILE" \
        --preset-import-file "$PRESET_FILE" \
        -Z "$PRESET_NAME" \
        --output "$TEMP_FILE"

    mv "$TEMP_FILE" "$OUT_DIR/$OUT_FILE"

    exit 0
}

if [ $# -eq 3 ]; then
    main "$1" "$2" "$3"
else
    usage
fi
