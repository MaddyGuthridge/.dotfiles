#!/usr/bin/python3
# cse
# SSH into CSE systems, or warn if we're already there
#
# Options:
#   -m --machine [machine name] = specify which machine to connect to
import sys
import os
from subprocess import Popen, PIPE

zid = os.getenv("ZID")

# FIXME: Should probably use proper argparsing if I want this to be remotely
# reliable
if len(sys.argv) >= 2 and (sys.argv[1] == "-m" or sys.argv[1] == "--machine"):
    machine_id = sys.argv[2]
    args = sys.argv[3:]
else:
    whereami = Popen(["bash", "-c", "whereami"], stdout=PIPE)
    whereami.wait()
    assert whereami.stdout

    machine_id = "login"
    args = sys.argv[1:]

    if "cse" in str(whereami.stdout.read()):
        if len(sys.argv) == 1:
            print("You're already at CSE", file=sys.stderr)
            exit(1)
        else:
            exit(os.system(" ".join(args)))

# FIXME: The args probably get messed up by this call to os.system since quotes
# aren't being preserved
exit(os.system(f'ssh "{zid}@{machine_id}.cse.unsw.edu.au" {" ".join(args)}'))
